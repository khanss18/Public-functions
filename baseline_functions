# contray function
contray <- function(con_lanes,con_fields,con_buf,con_dec,weighing,tray_lanes,tray_fields){
  #Construct conveyor
  grab_zone <- matrix(1:(con_lanes*con_fields),ncol=con_lanes,nrow=con_fields,byrow=T)
  buf_zone <- matrix((con_lanes*con_fields+1):(con_lanes*(con_fields+con_buf)),ncol=con_lanes,nrow=con_buf,byrow=T)
  dec_zone <- matrix((con_lanes*(con_fields+con_buf)+1):(con_lanes*(con_fields+con_buf+con_dec)),ncol=con_lanes,nrow=con_dec,byrow=T)
  weight_zone <- matrix((con_lanes*(con_fields+con_buf+con_dec)+1):(con_lanes*(con_fields+con_buf+con_dec+weighing)),ncol=con_lanes,nrow=weighing,byrow=T)
  colnames(grab_zone) <- paste0("Ln", 1:ncol(grab_zone))
  rownames(grab_zone) <- paste0("G_pos", nrow(grab_zone):1)
  rownames(buf_zone) <- paste0("B_pos", nrow(buf_zone):1)
  rownames(dec_zone) <- paste0("D_pos", nrow(dec_zone):1)
  rownames(weight_zone) <- paste0("W_pos", nrow(dec_zone):1)
  conveyor <- rbind(grab_zone,buf_zone,dec_zone,weight_zone)
  
  # Construct tray lanes
  tray <- matrix(1:(tray_fields*tray_lanes),ncol=tray_lanes,nrow=tray_fields,byrow=T)
  colnames(tray) <- paste0("Tray_ln", 1:ncol(tray))
  rownames(tray) <- paste0("Tray_pos", 1:nrow(tray))
  
  # Return conveyor and tray lanes
  con_tray <- list(conveyor,tray)
  return(con_tray)
}


# Coordinates of trays
tray_coord <- function(tray_lanes,con_adv_length,tray_adv_length,con_lanes_width){
  cent_to_drop <- con_width/2 + tray_width/2
    con_lanes*(con_lanes_width/2) + 2
  for(i in 1:2){
    tray_coords <- paste("tray_coords",i,sep = "")
    assign(tray_coords,rep(0,tray_lanes*tray_fields))
  }
  if(tray_lanes == 1){
    tray_coords1 <- rep(-cent_to_drop,each=tray_fields)
  }
  else{
    tray_coords1 <- rep(c(-cent_to_drop,cent_to_drop),each=tray_fields)
  }
  tray_coords2 <- rep(seq(tray_adv_length*tray_fields+con_adv_length,tray_adv_length, by = -tray_adv_length),tray_lanes)
  tray_coords <- cbind(tray_coords1,tray_coords2)
  return(tray_coords)
}


# Coordinates of fields
con_coord <- function(con_lanes,con_lanes_width,con_adv_length){
  for(i in 1:2){
    con_coords <- paste("con_coords",i,sep = "")
    assign(con_coords,rep(0,con_lanes*con_fields))
  }
  con_coords1 <- rep(seq(-(con_lanes_width*(con_lanes-1))/2,(con_lanes_width*(con_lanes-1))/2,by = con_lanes_width),each = con_fields)
  con_coords2 <- rep(seq((con_adv_length*con_fields)-(con_adv_length/2),con_adv_length/2, by = -con_adv_length),con_lanes)
  con_coords <- cbind(con_coords1,con_coords2)
  return(con_coords)
}


# Trayweight reward
tray_fit <- function(target_weight, pos_tol, SuperB_int, Accept, weight_dist){
  TWG <- c(0,seq(from = floor(min_w/SuperB_int), to = (target_weight+pos_tol-SuperB_int)/SuperB_int))
  TW <- TWG*SuperB_int
  IW <- seq(from = floor(min_w/SuperB_int)*SuperB_int, to = floor(max_w/SuperB_int)*SuperB_int, by = SuperB_int)
  IWG <- IW/SuperB_int
  IWG_vec <- rep(0,length(IWG))
  
  missing <- as.data.frame(matrix(0,nrow = (max(TWG)+1), ncol = ceiling((target_weight+pos_tol)/IW[1])))
  colnames(missing) <- paste0("miss", 0:(ncol(missing)-1))
  rownames(missing) <- paste0("reward", 0:(nrow(missing)-1))
  missing$miss0 <- replace(missing$miss0, list = (length(missing$miss0)-length(Accept)+1):length(missing$miss0),Accept)
  
  for(i in 1:length(IWG)){
    num_IWG <- paste("num_IWG",i,sep = "")
    assign(num_IWG,sum(weight_dist >= IW[i] & weight_dist < IW[i+1]))
    IWG_vec[i] <- sum(weight_dist >= IW[i] & weight_dist < IW[i+1])/tot_rand
  }
  
  for(i in 2:ncol(missing)){
    for(j in nrow(missing):1){
      for(k in tail(IWG,n=1):IWG[1]){
        missing[j,i] <- missing[j,i]+missing[j+k,i-1]*as.numeric(IWG_vec)[k-(IWG[1]-1)]
        missing[is.na(missing)] <- 0
      }
    }
  }
  bar_plot <- colSums(t(missing), dims = 1)
  
  
  lst <- list(bar_plot,TWG,TW,IW,IWG)
  return(lst)
}


# Reward function
reward_baseline <- function(reward_trays,trayweight_rew,weight_trays,weight_fields,SuperB_int,TW,t_conv_to_tray,new_ln_inner){
  for(j in 1:length(reward_trays)){
    reward_trays[j] <- trayweight_rew[match((floor((weight_trays[j]+t(weight_fields)[i])/SuperB_int)*SuperB_int),TW)]
  }
  reward_trays[!is.na(reward_trays)] <- 1
  reward_trays[is.na(reward_trays)] <- 0
  for(j in 1:nrow(reward_trays)){
    reward_trays[j,1] <- reward_trays[j,1]*(1/j)*(1/t_conv_to_tray[new_ln_inner,j])
  }
  for(j in 1:nrow(reward_trays)){
    reward_trays[j,2] <- reward_trays[j,2]*(1/j)*(1/t_conv_to_tray[new_ln_inner,(j+nrow(reward_trays))])
  }
  return(reward_trays)
}
